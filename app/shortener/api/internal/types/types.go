// Code generated by goctl. DO NOT EDIT.
// goctl 1.9.1

package types

type ClickPoint struct {
	Time  string `json:"time"` // 日期或小时
	Value int64  `json:"value"`
}

type CreateLinkRequest struct {
	OriginalUrl string `json:"originalUrl"`         // 必填：原始长链接
	CustomCode  string `json:"customCode,optional"` // 选填：自定义短码
	ExpiresIn   string `json:"expiresIn,optional"`
}

type CreateLinkResponse struct {
	Link Link `json:"link"`
}

type DeleteLinkRequest struct {
	Code string `path:"code"` // 路径参数：要删除的 short_code
}

type GetAnalyticsRequest struct {
	Code      string `path:"code"`
	StartDate string `json:"startDate,optional"` // ISO 8601 日期
	EndDate   string `json:"endDate,optional"`   // ISO 8601 日期
}

type GetAnalyticsResponse struct {
	ShortCode    string       `json:"shortCode"`
	TotalClicks  int64        `json:"totalClicks"`  // 数据源：聚合表
	TimeSeries   []ClickPoint `json:"timeSeries"`   // 数据源：聚合表
	TopReferers  []StatItem   `json:"topReferers"`  // 数据源：聚合表
	TopCountries []StatItem   `json:"topCountries"` // 数据源：聚合表
	TopDevices   []StatItem   `json:"topDevices"`   // 数据源：聚合表
	TopBrowsers  []StatItem   `json:"topBrowsers"`  // 数据源：聚合表
	TopOS        []StatItem   `json:"topOS"`        // 数据源：聚合表
}

type GetDashboardRequest struct {
	StartDate string `json:"startDate,optional"`
	EndDate   string `json:"endDate,optional"`
}

type GetDashboardResponse struct {
	TotalLinks  int64 `json:"totalLinks"`       // 数据源: links 表
	TotalClicks int64 `json:"totalClicks"`      // 数据源: 聚合表
	TopLink     *Link `json:"topLink,optional"` // 点击量最高的链接 (使用指针)
}

type Link struct {
	Id             int64  `json:"id"`
	ShortCode      string `json:"shortCode"`
	OriginalUrl    string `json:"originalUrl"`
	IsActive       bool   `json:"isActive"`
	ExpirationTime string `json:"expirationTime,optional"` // ISO 8601 格式, e.g., "2025-10-21T08:00:00Z"
	CreatedAt      string `json:"createdAt"`
}

type ListLinksRequest struct {
	Page     int    `json:"page,optional"`     // 页码, 默认 1
	PageSize int    `json:"pageSize,optional"` // 每页数量, 默认 20
	Status   string `json:"status,optional"`
}

type ListLinksResponse struct {
	Links []Link `json:"links"`
	Total int64  `json:"total"`
}

type RedirectRequest struct {
	Code string `path:"code"`
}

type StatItem struct {
	Key   string `json:"key"`
	Value int64  `json:"value"`
}

type UpdateLinkRequest struct {
	Code           string  `path:"code"`                 // 路径参数：要更新的 short_code
	OriginalUrl    string  `json:"originalUrl,optional"` // 选填：新的目标地址
	IsActive       *bool   `json:"isActive,optional"`    // 选填：是否激活 (使用指针以区分 false 和 "未提供")
	ExpirationTime *string `json:"expirationTime,optional"`
}

type UpdateLinkResponse struct {
	Link Link `json:"link"`
}

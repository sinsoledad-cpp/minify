// Code generated by goctl. DO NOT EDIT.
// goctl 1.9.1

package handler

import (
	"net/http"

	shortener "lucid/app/shortener/api/internal/handler/shortener"
	"lucid/app/shortener/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				// 创建短链接
				Method:  http.MethodPost,
				Path:    "/links",
				Handler: shortener.CreateShortUrlHandler(serverCtx),
			},
			{
				// 列出当前用户的所有短链接
				Method:  http.MethodGet,
				Path:    "/links",
				Handler: shortener.ListShortUrlsHandler(serverCtx),
			},
			{
				// 更新短链接
				Method:  http.MethodPut,
				Path:    "/links/:shortKey",
				Handler: shortener.UpdateShortUrlHandler(serverCtx),
			},
			{
				// 删除短链接
				Method:  http.MethodDelete,
				Path:    "/links/:shortKey",
				Handler: shortener.DeleteShortUrlHandler(serverCtx),
			},
			{
				// 获取短链接详情
				Method:  http.MethodGet,
				Path:    "/links/:shortKey",
				Handler: shortener.GetShortUrlHandler(serverCtx),
			},
			{
				// 获取短链接的每日统计报表
				Method:  http.MethodGet,
				Path:    "/reports/daily/:shortKey",
				Handler: shortener.GetDailySummaryHandler(serverCtx),
			},
			{
				// 获取短链接的访问统计
				Method:  http.MethodGet,
				Path:    "/stats/:shortKey",
				Handler: shortener.GetShortUrlStatsHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api/v1/shortener"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// 短链接重定向
				Method:  http.MethodGet,
				Path:    "/Public/:shortKey",
				Handler: shortener.RedirectShortUrlHandler(serverCtx),
			},
		},
		rest.WithPrefix("/shortener"),
	)
}
